---
title: "Caracterización de árboles de algarrobo (Neltuma pallida) en localidades de las regiones Piura y Tumbes"
format:
  html:
    toc: true
    toc-location: left
    number-sections: true
    self-contained: true
    output-file: "ESM_1"
editor_options: 
  chunk_output_type: console
execute: 
  warning: false
  echo: true
---

# Project Setup

```{r}
#| label:  setup
library(corrplot)
library(multcomp)
library(factoextra)
library(corrplot)
library(explore)
library(gridGraphics)
library(dplyr)
library(textshape)
library(googlesheets4)
library(cluster)
library(vegan)
library(NbClust)
source('https://inkaverse.com/setup.r')

set.seed(2025)
cat("Project: ", getwd(), "\n")
session_info()
```

# Import data

The data were imported from the field book of the biological, dasometric, and phytosanitary evaluation of mesquite trees to identify the main pests and diseases associated with the genus *Neltuma*.

```{r}
url <- "https://docs.google.com/spreadsheets/d/19zJF9ti9AQhOCTenP6UqL0jA8Anl1s0r0ld-xzrR-PY/edit?gid=1347114226#gid=1347114226"

gs <- url %>% 
  as_sheets_id()

datos <- gs %>%
  range_read("total") %>%
  mutate(
    'Tree form description' = case_when(
      Forma_arbol == 3 ~ "Single-stemmed trees",
      Forma_arbol == 2 ~ "Intermediate trees",
      Forma_arbol == 1 ~ "Multi-stemmed trees",
      TRUE ~ NA_character_
    ),
    'Trunk quality description' = case_when(
      Calidad_tronco == 3 ~ "High-quality tree, free of defects or with minimal defects",
      Calidad_tronco == 2 ~ "Moderate-quality tree with defects",
      Calidad_tronco == 1 ~ "Poor-quality tree with significant defects",
      TRUE ~ NA_character_
    ),
    'Fruit production description' = case_when(
      Produccion_frutos == 4 ~ "Trees bearing fruit on 100% of branches",
      Produccion_frutos == 3 ~ "Trees bearing fruit on up to 75% of branches",
      Produccion_frutos == 2 ~ "Trees bearing fruit on up to 50% of branches",
      Produccion_frutos == 1 ~ "Trees bearing fruit on up to 25% of branches",
      Produccion_frutos == 0 ~ "Trees without fruit",
      TRUE ~ NA_character_
    ),
     'Fruit quality description' = case_when(
      Calidad_frutos == 3 ~ "Trees with very sweet fruit",
      Calidad_frutos == 2 ~ "Trees with sweet fruit",
      Calidad_frutos == 1 ~ "Trees with very bitter fruit",
      Calidad_frutos == 0 ~ "Trees with bitter fruit",
      TRUE ~ NA_character_
    ),
    'Foliage quality description' = case_when(
      Calidad_follaje == 3 ~ "Trees with foliage on all branches",
      Calidad_follaje == 2 ~ "Trees with foliage on up to two-thirds of branches",
      Calidad_follaje == 1 ~ "Trees with foliage on up to one-third of branches",
      TRUE ~ NA_character_
    ),
   'Forking description' = case_when(
      Bifurcacion == 3 ~ "No evidence of bifurcation",
      Bifurcacion == 2 ~ "Forked at breast height (DBH)",
      Bifurcacion == 1 ~ "Presence of bifurcation below breast height (DBH)",
      TRUE ~ NA_character_
    )
  ) %>%
  select(
   Individuo, Departamento = "Depart", Estación,
    Num_ramas_XX:Parasitos_XX, Localidad:Suelo,
     Forma_arbol_descripcion:Bifurcacion_descripcion
  ) %>%
  select(
   Individuo, Departamento, Provincia, Distrito, Localidad, Estación,Cuenca,
    DAP:Altura_total, Num_ramas_XX,
    Forma_arbol, Forma_arbol_descripcion,
    Calidad_tronco, Calidad_tronco_descripcion,
    Produccion_frutos, Produccion_frutos_descripcion,
    Calidad_frutos, Calidad_frutos_descripcion,
    Calidad_follaje, Calidad_follaje_descripcion,
    Bifurcacion, Bifurcacion_descripcion,
    `fito_IIhEd _k`:Parasitos_XX, Carbonatos:Suelo
  ) %>%
  mutate(across(c(1:7), as.factor)) %>% 
  mutate(across(c(Forma_arbol:Parasitos_XX, Suelo), as.factor)) %>% 
  rename(
         , Individual = Individuo
         , Departament = Departamento
         , Province = Provincia
         , District = Distrito
         , Locality = Localidad
         , Station = Estación
         , Basin = Cuenca
         , DBH = DAP
         , 'Crown diameter' = Diam_copa
         , 'Branch height' = Altura_ram
         , 'Total height' = Altura_total
         , 'Number of branches' = Num_ramas_XX
         , 'Tree form' = Forma_arbol
         , 'Trunk quality' = Calidad_tronco
         , 'Fruit production' = Produccion_frutos
         , 'Fruit quality' = Calidad_frutos
         , 'Foliage quality' = Calidad_follaje
         , 'Forking' = Bifurcacion
         )

names(datos)

str(datos)

summary(datos)

data_variables <- datos %>% 
  select(Individuo, Departamento, Provincia, Distrito, Localidad, Estación,Cuenca,
    DAP:Altura_total,
    Forma_arbol,
    Calidad_tronco, 
    Produccion_frutos, 
    Calidad_frutos,
    Calidad_follaje, 
    Bifurcacion, 
    `fito_IIhEd _k`:Parasitos_XX, Carbonatos:pH)

str(data_variables)

data_coordenadas <- gs %>%
  range_read("total") %>%
  select(
   Individuo, Departamento = "Depart", Provincia,
   Distrito, Localidad, Estación, Cuenca, UTM_X,UTM_Y, UTM_E_suelo,
   UTM_N_suelo) 

str(data_coordenadas)
```

```{r}
datos %>% kable(caption = "Evaluation of mesquite trees", align = 'c')

data_coordenadas %>% kable(caption = "Location of mesquite trees", align = 'c')
```

# Data summary

Descriptive statistics of the variables evaluated.

```{r}
# sm <- data_variables %>% 
#   group_by(Departamento) %>% 
#   summarise(across(DAP:pH, ~ sum(!is.na(.))))
# 
# sm
# 
# descriptive_numerics <- data_variables %>% 
#   dlookr::describe() %>% 
#   select(Variables = "described_variables", n:kurtosis, min = "p00", q1 = "p25", 
#          median = "p50", q3 = "p75", max = "p100")
# 
# descriptive_numerics
# 
# data_variables %>% 
#   dlookr::plot_hist_numeric()
# 
# data_variables %>% 
#   group_by(Departamento) %>% 
#   dlookr::plot_box_numeric()
# 
# data_variables %>% 
#   dlookr::plot_qq_numeric()
# 
# descriptive_categoricals <- data_variables %>% 
#   dlookr::diagnose_category() %>% 
#   select(-rank)
# 
# descriptive_categoricals
#   
# dlookr::plot_bar_category(data_variables)
```

# Shannon–Weaver diversity index (H′)

```{r}
h <- datos %>% 
  select(Forma_arbol_descripcion,Calidad_tronco_descripcion,
         Produccion_frutos_descripcion,
         Calidad_frutos_descripcion,
         Calidad_follaje_descripcion,
         Bifurcacion_descripcion)

variables <- c("Forma_arbol_descripcion", "Calidad_tronco_descripcion", "Produccion_frutos_descripcion", 
               "Calidad_frutos_descripcion", "Calidad_follaje_descripcion", "Bifurcacion_descripcion")

# Crear lista vacía para guardar resultados
resultados <- list()

for (var in variables) {
  # Tabla de frecuencia
  freq_table <- as.data.frame(table(datos[[var]]))
  colnames(freq_table) <- c("State", "Frequency")
  
  # Calcular proporción
  freq_table$Proportion <- round((freq_table$Frequency / sum(freq_table$Frequency)) * 100, 2)
  
  # Índice de Shannon
  H <- diversity(freq_table$Frequency, index = "shannon")
  
  # Añadir variable y valor del índice a la tabla
  freq_table <- freq_table %>%
    mutate(Qualitative_trait = var,
           Shannon_Weaver_index = round(H, 2)) %>%
    select(Qualitative_trait, Shannon_Weaver_index, everything())
  
  # Guardar
  resultados[[var]] <- freq_table
}

# Unir todo en una sola tabla
tabla_shannon <- bind_rows(resultados)

tabla_shannon %>% kable(align = 'c')

tabla_shannon %>%
  write_sheet(ss = gs, sheet = "shanon_index")

```

## Cluster Analysis

```{r}
mv <- data_variables %>%
  mutate(across(Forma_arbol:Parasitos_XX, as.numeric)) %>%
  group_by(Localidad) %>%
  select(
    -(`fito_IIhEd _k`:Parasitos_XX),
    -c(Altura_ram, Bifurcacion, Cuenca, Estación),
    -(Individuo:Localidad),
    -(Carbonatos:pH)
  ) %>%
  summarise(across(where(is.numeric), ~ mean(.x, na.rm = TRUE)))

mv1 <- mv %>% 
  textshape::column_to_rownames(., loc = 1)

data_clust <- scale(mv1)

m_distancia <- get_dist(data_clust, method = "euclidean")

fviz_nbclust(data_clust, pam, method = "silhouette")

pm <- pam(data_clust,4)

res <- hcut(m_distancia, k = 4, stand = TRUE, method = "median")

fviz_dend(res, rect = TRUE, cex = 0.59)
```

# Traits distribution by population

```{r}
data_dist <- data_variables %>%
  select(
    -c(Individuo:Distrito, Estación:Cuenca,
       `fito_IIhEd _k`:Parasitos_XX,
       Carbonatos:pH)
  )

str(data_dist)

dist_num <- data_dist %>%
  pivot_longer(
    cols = c(DAP, Diam_copa, Altura_ram, Altura_total), 
    names_to = "Variable",
    values_to = "Valor"
  ) %>%
  ggplot(aes(x = Localidad, y = Valor, fill = Localidad)) +
  geom_violin(trim = FALSE, alpha = 0.5) +
  geom_boxplot(width = 0.1, outlier.shape = NA) +
  facet_wrap(~ Variable, scales = "free_y", ncol = 1, strip.position = "left") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    strip.placement = "outside",
    strip.text = element_text(face = "bold"),
    legend.position = "none"
  ) +
  labs(x = "", y = "")
```

# Broad-sense heritability

```{r}
data_variables %>% names()
data_variables %>% str()

#> sebas no te olvides de limpiar las cabeceras siempre

h2d <- data_variables %>% 
  dplyr::select(1:Calidad_follaje) %>% 
  mutate(across(1:Cuenca, ~ as.factor(.))) %>%
  mutate(across(DAP:length(.), ~ as.numeric(.))) %>% 
  rename_with(~tolower(.)) %>% # poner en minusculas
  rename_with(~iconv(x = ., to = "ASCII//TRANSLIT")) # quitar todos las letras extrañas

str(h2d)

group <- "departamento"

mgroup <- h2d %>% 
  dplyr::select({{group}}) %>% 
  unique() %>% 
  deframe() %>% as.vector()

rslt <- 1:length(mgroup) %>% map(\(a) {
  
  npop <- mgroup[a]
  
  cat("\n#>", npop)
  
  gpop <- h2d %>% 
    filter(.[[group]] %in% {{npop}}) %>% 
    dplyr::select(!c(calidad_frutos, calidad_follaje)) # al parecer no tiene variabilidad
  
  # str(gpop)
  
  nvar <- match("dap", names(gpop))
  
  groups <- nvar:length(gpop) %>% map(\(b) {
    
    trait <- names(gpop)[b]
    
    cat("\n#>", trait)
    
    gpop %>%  
       H2cal(data = .
        , trait = trait
        , gen.name = "localidad"
        , rep.n = 8 # maximo valor de n localidades
        , fixed.model = "0 + (1|provincia) + localidad"
        , random.model = "1 + (1|provincia) + (1|localidad)"
        , emmeans = FALSE
        , plot_diag = TRUE
        , outliers.rm = TRUE
        , trial = npop
        )
  })
})

h2tab <- 1:length(rslt) %>% map(\(x) {
  
  nlst <- rslt[[x]]
  
  1:length(nlst) %>% map(\(z) {
      rslt[[x]][[z]][["tabsmr"]] 
    })
  }) %>% 
  bind_rows() %>% 
  rename(Trait = trait, Heritability = H2.s, Population = trial, Localidad = geno) %>% 
  dplyr::select(!matches("H2|rep|env|year"))


h2tab %>% kable(caption = "Variance component table")


h2blues <- 1:length(rslt) %>% map(\(x) {
  
  nlst <- rslt[[x]]
  
  1:length(nlst) %>% map(\(z) {
      rslt[[x]][[z]][["blues"]] %>% 
      dplyr::select(!smith.w) %>% 
      pivot_longer(!c(trial, localidad), names_to = "trait")
    })
  })  %>% 
  bind_rows() %>% 
  ungroup() %>% 
  group_by(trait) %>% 
  arrange(desc(value), .by_group = T)

h2blues %>% kable(caption = "BLUEs")
```

# Multivariate

## Principal Component Analysis (PCA)

Principal Component Analysis (PCA). Results of the contributions and correlation of the variables in the Principal Component Analysis (PCA).

```{r}
mv <- data_variables %>%
  mutate(across(c(Forma_arbol:Parasitos_XX), as.numeric)) %>%
  group_by(Localidad) %>%
  select(-(`fito_IIhEd _k`:Parasitos_XX)) %>%
      select(-c(Altura_ram, Bifurcacion, Cuenca, Estación)) %>%
  select(-(Individuo:Localidad)) %>%
  select(-(Carbonatos:pH)) %>% 
  summarise(across(where(is.numeric), ~ mean(., na.rm = T)))

pca <- mv %>%
  PCA(scale.unit = T, quali.sup = 1, graph = F)

# summary

summary(pca, nbelements = Inf, nb.dec = 2)

f4a <- plot.PCA(x = pca, choix = "var"
                , cex=0.8
                , label = "var"
                )

f4b <- plot.PCA(x = pca, choix = "ind"
                , habillage = 1
                , invisible = c("ind")
                , cex=0.8
                , ylim = c(-3,3)
                )

# data_pca <- data_variables %>% 
#       mutate(across(c(Forma_arbol:Parasitos_XX), as.numeric)) %>% 
#       select(-(Individuo:Cuenca)) %>% 
#       select(-(`fito_IIhEd _k`:Parasitos_XX)) %>%
#       select(-c(Altura_ram, Bifurcacion))
#       # textshape::column_to_rownames(., loc = 1)
# 
# str(data_pca)
# 
# res.pca <- PCA(mv = data_pca, scale.unit = T, graph = F)
# 
# summary(res.pca)
# 
# fviz_screeplot(res.pca)
# 
# fviz_pca_var(res.pca,
#              col.var = "contrib", # Color by contributions to the PC
#              gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
#              repel = TRUE     # Avoid text overlapping
# )
# 
# grupo <- as.factor(datos$Localidad)
# 
# p1 <- fviz_pca_biplot(pca,
#                 axes = c(1,2),
#                 # col.ind = grupo,
#                 legend.title = "Estaciones",
#                 geom.ind = "point",
#                 repel = FALSE
# ) +
# theme(
#     legend.position = "bottom",        # Leyenda abajo
#     legend.justification = "center",   # Centra la leyenda
#     legend.direction = "horizontal"    # Distribuye los elementos horizontalmente
#   ) +
#   guides(color = guide_legend(nrow = 1))
```

### Figure 1

Principal Component Analysis (PCA). Results of the contributions and correlation of the variables in the Principal Component Analysis (PCA).

```{r}
var <- get_pca_var(pca)

pt1 <- fviz_eig(pca, 
                addlabels=TRUE,
                hjust = 0.05,
                barfill="white",
                barcolor ="darkblue",
                linecolor ="red") + 
  ylim(0, 80) + 
  labs(
    title = "PCA - percentage of explained variances",
    y = "Variance (%)") +
  theme_minimal()

pt2 <- fviz_contrib(pca,
                     choice = "var", 
                     axes = 1, 
                     top = 10,
                     fill="white",
                     color ="darkblue",
                     sort.val = "desc") +
  ylim(0, 20) + 
  labs(title = "Dim 1 - variables contribution") 

pt3 <- fviz_contrib(pca,
                     choice = "var", 
                     axes = 2, 
                     top = 10,
                     fill="white",
                     color ="darkblue",
                     sort.val = "desc") +
  ylim(0, 60) + 
  labs(title = "Dim 2 - variables contribution") 

pt4 <- function() {

  corrplot(var$cor,
         method="number",
         tl.col="black",
         tl.srt=45,)

}
# Construcción del grid

fila1 <- plot_grid(f4a, f4b, ncol = 2, labels = "auto", rel_widths = c(1, 1.4))

columna_c <- plot_grid(pt1, pt2, pt3, ncol = 1, labels = "c")

fila2 <- plot_grid(columna_c, pt4, ncol = 2, labels = c("", "d"), rel_widths = c(1, 1.3))

grid_final <- plot_grid(fila1, fila2, ncol = 1, rel_heights = c(1, 1.2))

grid_final

ggsave2(plot = grid_final, "submission/Figure_1.jpg", height = 30, width = 28, units = "cm")

ggsave2(plot = grid_final, "submission/Figure_4.eps", height = 30, width = 28, units = "cm")

knitr::include_graphics("submission/Figure_4.jpg")
```

