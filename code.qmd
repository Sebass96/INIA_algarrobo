---
title: "Caracterización de árboles de algarrobo (Neltuma pallida) en localidades de las regiones Piura y Tumbes"
format:
  html:
    toc: true
    toc-location: left
    number-sections: true
    self-contained: true
    output-file: "ESM_1"
editor_options: 
  chunk_output_type: console
execute: 
  warning: false
  echo: true
---

# Project Setup

```{r}
#| label:  setup
library(corrplot)
library(multcomp)
library(factoextra)
library(corrplot)
library(explore)
library(dplyr)
library(textshape)
library(googlesheets4)
library(dlookr)
source('https://inkaverse.com/setup.r')

cat("Project: ", getwd(), "\n")
session_info()
```

# Import data

The data were imported from the field book of the biological, dasometric, and phytosanitary evaluation of mesquite trees to identify the main pests and diseases associated with the genus *Neltuma*.

```{r}
url <- "https://docs.google.com/spreadsheets/d/19zJF9ti9AQhOCTenP6UqL0jA8Anl1s0r0ld-xzrR-PY/edit?gid=1347114226#gid=1347114226"

gs <- url %>% 
  as_sheets_id()

datos <- gs %>%
  range_read("total") %>%
  mutate(
    Forma_arbol_descripcion = case_when(
      Forma_arbol == 3 ~ "un solo tallo",
      Forma_arbol == 2 ~ "intermedios",
      Forma_arbol == 1 ~ "múltiples tallos",
      TRUE ~ NA_character_
    ),
    Calidad_tronco_descripcion = case_when(
      Calidad_tronco == 3 ~ "sin defectos",
      Calidad_tronco == 2 ~ "regular defectos",
      Calidad_tronco == 1 ~ "defectuoso",
      TRUE ~ NA_character_
    ),
    Produccion_frutos_descripcion = case_when(
      Produccion_frutos == 4 ~ "100% de las ramas",
      Produccion_frutos == 3 ~ "75% de las ramas",
      Produccion_frutos == 2 ~ "50% de las ramas",
      Produccion_frutos == 1 ~ "25% de las ramas",
      Produccion_frutos == 0 ~ "Sin frutos",
      TRUE ~ NA_character_
    ),
     Calidad_frutos_descripcion = case_when(
      Calidad_frutos == 3 ~ "muy dulce",
      Calidad_frutos == 2 ~ "dulce",
      Calidad_frutos == 1 ~ "muy amargo",
      Calidad_frutos == 0 ~ "amargo",
      TRUE ~ NA_character_
    ),
    Calidad_follaje_descripcion = case_when(
      Calidad_follaje == 3 ~ "total de las ramas",
      Calidad_follaje == 2 ~ "2/3 de las ramas",
      Calidad_follaje == 1 ~ "1/3 de las ramas",
      TRUE ~ NA_character_
    ),
   Bifurcacion_descripcion = case_when(
      Bifurcacion == 3 ~ "no presenta bifurcación",
      Bifurcacion == 2 ~ "bifurcado a la altura del DAP",
      Bifurcacion == 1 ~ "bifurcado por debajo del DAP",
      TRUE ~ NA_character_
    )
  ) %>%
  select(
   Individuo, Departamento = "Depart", Estación,
    Num_ramas_XX:Parasitos_XX, Localidad:Suelo,
     Forma_arbol_descripcion:Bifurcacion_descripcion
  ) %>%
  select(
   Individuo, Departamento, Provincia, Distrito, Localidad, Estación,Cuenca,
    DAP:Altura_total, Num_ramas_XX,
    Forma_arbol, Forma_arbol_descripcion,
    Calidad_tronco, Calidad_tronco_descripcion,
    Produccion_frutos, Produccion_frutos_descripcion,
    Calidad_frutos, Calidad_frutos_descripcion,
    Calidad_follaje, Calidad_follaje_descripcion,
    Bifurcacion, Bifurcacion_descripcion,
    `fito_IIhEd _k`:Parasitos_XX, Carbonatos:Suelo
  ) %>%
  mutate(across(c(Forma_arbol:Parasitos_XX, Suelo), as.factor))

str(datos)

summary(datos)

data_variables <- datos %>% 
  select(Individuo, Departamento, Provincia, Distrito, Localidad, Estación,Cuenca,
    DAP:Altura_total,
    Forma_arbol,
    Calidad_tronco, 
    Produccion_frutos, 
    Calidad_frutos,
    Calidad_follaje, 
    Bifurcacion, 
    `fito_IIhEd _k`:Parasitos_XX, Carbonatos:pH)

str(data_variables)

data_coordenadas <- gs %>%
  range_read("total") %>%
  select(
   Individuo, Departamento = "Depart", Provincia,
   Distrito, Localidad, Estación, Cuenca, UTM_X,UTM_Y, UTM_E_suelo,
   UTM_N_suelo) 

str(data_coordenadas)
```

```{r}
datos %>% kable(caption = "Evaluation of mesquite trees", align = 'c')

data_coordenadas %>% kable(caption = "Location of mesquite trees", align = 'c')
```

# Data summary

Descriptive statistics of the variables evaluated.

```{r}
sm <- data_variables %>% 
  group_by(Departamento) %>% 
  summarise(across(DAP:pH, ~ sum(!is.na(.))))

sm

descriptive_numerics <- data_variables %>% 
  dlookr::describe() %>% 
  select(Variables = "described_variables", n:kurtosis, min = "p00", q1 = "p25", 
         median = "p50", q3 = "p75", max = "p100")

descriptive_numerics

data_variables %>% 
  dlookr::plot_hist_numeric()

data_variables %>% 
  group_by(Departamento) %>% 
  dlookr::plot_box_numeric()

data_variables %>% 
  dlookr::plot_qq_numeric()

descriptive_categoricals <- data_variables %>% 
  dlookr::diagnose_category() %>% 
  select(-rank)

descriptive_categoricals
  
dlookr::plot_bar_category(data_variables)
```

## Multivariate

Principal Component Analysis (PCA) of agronomic traits in the mango crop based on the use of rootstock-interstock combinations.

```{r}
data_pca <- data_variables %>% 
      mutate(across(c(Forma_arbol:Parasitos_XX), as.numeric)) %>% 
      select(-(Departamento:Cuenca)) %>% 
      select(-(`fito_IIhEd _k`:Parasitos_XX)) %>% 
      textshape::column_to_rownames(., loc = 1)

str(data_pca)

summary(data_pca)

respca <- prcomp(data_pca, scale = TRUE)

names(respca)

head(respca$rotation)[, 1:5] #las coordenadas de los datos en el nuevo sistema rotado de coordenadas. 
                              #Estas coordenadas se corresponden con los scores de los componentes principales.

dim(respca$rotation) #Número de distintos componentes

head(respca$x)[,1:5] #los vectores de los scores.

respca$sdev #las desviaciones estándares de cada CP.

respca$sdev^2  ## Varianza explicada por cada componente

summary(respca)

bipl1 <- fviz_pca_biplot(respca,
axis = c(1, 2),
label ="var",
habillage = data_variables$Cuenca)

bipl2 <- fviz_pca_biplot(respca,
axis = c(1,3),
label ="var",
habillage = data_variables$Cuenca)

bipl3 <- fviz_pca_biplot(respca,
axis = c(2, 3),
label ="var",
habillage = data_variables$Cuenca)

#comprobemos la importancia del componente 1
xx<-respca$x
xx<-as.data.frame(xx)
base_datos$PC1<-xx$PC1
base_datos$PC2<-xx$PC2
base_datoscor <- subset(base_datos, select = -c(Alignment))
head(base_datoscor)
cor(base_datoscor)
#otra función
#princomp() 


pca <- PCA(X = data_pca, scale.unit = T, graph = F)

print(pca)

head(pca$eig) #como ejemplo

fviz_screeplot(pca) #visualizar eigenvalores (scree plot)

fviz_pca_ind(pca) #Representación de observaciones sobre componentes principales.

fviz_pca_var(pca) #Representación de variables sobre componentes principales.

fviz_pca_var(pca,
             col.var = "contrib", # Color by contributions to the PC
             gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
             repel = TRUE     # Avoid text overlapping
)

fviz_pca_ind(pca,
             col.ind = "cos2", # Color by the quality of representation
             gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
             repel = FALSE     # Avoid text overlapping
)


fviz_contrib(pca,choice = "var") #Representa la contribución de filas/columnas de los resultados de un pca.


fviz_pca_biplot(pca, repel = FALSE,
                col.var = "#2E9FDF", # Variables color
                col.ind = "#696969"  # Individuals color
)

fviz_pca_biplot(pca, repel = TRUE,
                #geom= "point", #o text o geom=c("point", "text")
                col.var = "#2E9FDF", # Variables color
                col.ind = "#696969", # Individuals color
                select.ind = list(contrib = 30)
)

grupo<-as.factor(datos$Cuenca)

fviz_pca_ind(pca, label="none", habillage=datos$Cuenca)

fviz_pca_ind(pca,
             col.ind = grupo, # color by groups
             palette = c("#00AFBB", "#FC4E07","#696969","blue", "pink"),
             addEllipses = TRUE, # Concentration ellipses
             ellipse.type = "confidence",
             legend.title = "Groups",
             repel = FALSE
)

fviz_pca_biplot(pca,
             col.ind = grupo, # color by groups
             palette = c("#00AFBB", "#FC4E07","#696969","blue", "pink"),
             addEllipses = TRUE, # Concentration ellipses
             ellipse.type = "confidence",
             legend.title = "Groups",
             repel = FALSE
)






mv <- data_variables %>% 
  group_by(Cuenca) %>% 
  summarise(across(where(is.numeric), ~ mean(., na.rm = T))) %>%   
   rename(Treat = treat
         , Height = height
         , Fruits = n_fruits
         , Flowering = flowering
         , Sproud = sproud)
  
pca <- mv %>% 
  PCA(scale.unit = T, quali.sup = 1, graph = F) 

# summary

summary(pca, nbelements = Inf, nb.dec = 2)

f4a <- plot.PCA(x = pca, choix = "var"
                , cex=0.8
                , label = "var"
                )

f4b <- plot.PCA(x = pca, choix = "ind"
                , habillage = 1
                , invisible = c("ind")
                , cex=0.8
                ) 
```

### Figure 4

Principal Component Analysis (PCA). Results of the contributions and correlation of the variables in the Principal Component Analysis (PCA).

```{r}
var <- get_pca_var(pca)

pt1 <- fviz_eig(pca, 
                addlabels=TRUE,
                hjust = 0.05,
                barfill="white",
                barcolor ="darkblue",
                linecolor ="red") + 
  ylim(0, 80) + 
  labs(
    title = "PCA - percentage of explained variances",
    y = "Variance (%)") +
  theme_minimal()

pt2 <- fviz_contrib(pca,
                     choice = "var", 
                     axes = 1, 
                     top = 10,
                     fill="white",
                     color ="darkblue",
                     sort.val = "desc") +
  ylim(0, 50) + 
  labs(title = "Dim 1 - variables contribution") 

pt3 <- fviz_contrib(pca,
                     choice = "var", 
                     axes = 2, 
                     top = 10,
                     fill="white",
                     color ="darkblue",
                     sort.val = "desc") +
  ylim(0, 80) + 
  labs(title = "Dim 2 - variables contribution") 

png("corrplot_output.png", width = 800, height = 800, res = 150)  
corrplot(var$cor, 
         method = "number",
         tl.col = "black", 
         tl.srt = 45)
dev.off()

img_corrplot <- ggdraw() + draw_image("corrplot_output.png")

pt4 <- img_corrplot

# Construcción del grid
fila1 <- plot_grid(f4a, f4b, ncol = 2, labels = "auto", rel_widths = c(1, 1.5))

columna_c <- plot_grid(pt1, pt2, pt3, ncol = 1, labels = "c")

fila2 <- plot_grid(columna_c, pt4, ncol = 2, labels = c("", "d"), rel_widths = c(1, 1))

grid_final <- plot_grid(fila1, fila2, ncol = 1, rel_heights = c(1, 1.2))

grid_final


ggsave2(plot = grid_final, "submission/Figure_4.jpg", height = 30, width = 28, units = "cm")

ggsave2(plot = grid_final, "submission/Figure_4.eps", height = 30, width = 28, units = "cm")

knitr::include_graphics("submission/Figure_4.jpg")
```

## Specific Objective 2

Determine the effect of the rootstock-interstock interaction on the fruit biometrics of mango.

### Fruit Weigth

```{r}
trait <- "weigth"

lmm <- paste({{trait}}, "~ 1 + (1|block) + stock*edge") %>% as.formula()

lmd <- paste({{trait}}, "~ block + stock*edge") %>% as.formula()

rmout <- fru %>% 
  remove_outliers(formula = lmm
                  , drop_na = T, plot_diag = T)

rmout$diagplot

rmout$outliers

model <- rmout$data$clean %>% 
  aov(formula = lmd, .)

anova(model)

mc <- emmeans(model, ~ edge|stock) %>%
  cld(Letters = letters, reversed = T) %>%
  mutate(across(.group, trimws)) %>% 
  rename(group = ".group")

mc %>% kable()

p2a <- mc %>% 
  plot_smr(x = "stock"
           , y = "emmean"
           , group = "edge"
           , sig = "group"
           , error = "SE"
           , color = T
           , xlab = "Rootstock"
           , ylab = "Fruit Weigth (g)"
           , glab = "Interstock"
           , ylimits = c(0, 600, 100)
           , 
           )

p2a
```

### Fruit length

```{r}
trait <- "long"

lmm <- paste({{trait}}, "~ 1 + (1|block) + stock*edge") %>% as.formula()

lmd <- paste({{trait}}, "~ block + stock*edge") %>% as.formula()

rmout <- fru %>% 
  remove_outliers(formula = lmm
                  , drop_na = T, plot_diag = T)

rmout$diagplot

rmout$outliers

model <- rmout$data$clean %>% 
  aov(formula = lmd, .)

anova(model)

mc <- emmeans(model, ~ edge|stock) %>%
  cld(Letters = letters, reversed = T) %>%
  mutate(across(.group, trimws)) %>% 
  rename(group = ".group")

mc %>% kable()

p2b <- mc %>% 
  plot_smr(x = "stock"
           , y = "emmean"
           , group = "edge"
           , sig = "group"
           , error = "SE"
           , color = T
           , xlab = "Rootstock"
           , ylab = "Fruit length (mm)"
           , glab = "Interstock"
           , ylimits = c(0, 120, 20)
           , 
           )

p2b
```

### Fruit diameter

```{r}
trait <- "diameter_average"

lmm <- paste({{trait}}, "~ 1 + (1|block) + stock*edge") %>% as.formula()

lmd <- paste({{trait}}, "~ block + stock*edge") %>% as.formula()

rmout <- fru %>% 
  remove_outliers(formula = lmm
                  , drop_na = T, plot_diag = T)

rmout$diagplot

rmout$outliers

model <- rmout$data$clean %>% 
  aov(formula = lmd, .)

anova(model)

mc <- emmeans(model, ~ edge|stock) %>%
  cld(Letters = letters, reversed = T) %>%
  mutate(across(.group, trimws)) %>% 
  rename(group = ".group")

mc %>% kable()

p2c <- mc %>% 
  plot_smr(x = "stock"
           , y = "emmean"
           , group = "edge"
           , sig = "group"
           , error = "SE"
           , color = T
           , xlab = "Rootstock"
           , ylab = "Fruit diameter (mm)"
           , glab = "Interstock"
           , ylimits = c(0, 100, 20)
           , 
           )

p2c
```

### Table 2

Descriptive statistics of the variables that determine the fruit biometrics of mango.

```{r}

sts <- Summarize(weigth  ~ stock*edge, data = fru, digits = 2, na.rm = TRUE)

tb1a <- sts%>% 
  merge(., mc) %>% 
  mutate(Variable = "Fruit Weigth (g)") %>% 
  dplyr::select(Variable, stock, edge, mean, sd, min, max, group) %>% 
  rename(Rootstock = stock,
         Interstock = edge,
         Sig = group)

sts <- Summarize(long  ~ stock*edge, data = fru, digits = 2, na.rm = TRUE)

tb1b <- sts%>% 
  merge(., mc) %>% 
  mutate(Variable = "Fruit length (mm)") %>% 
  dplyr::select(Variable, stock, edge, mean, sd, min, max, group) %>% 
  rename(Rootstock = stock,
         Interstock = edge,
         Sig = group)

sts <- Summarize(diameter_average ~ stock*edge, data = fru, digits = 2, na.rm = TRUE)

tb1c <- sts%>% 
  merge(., mc) %>% 
  mutate(Variable = "Fruit diameter (mm)") %>% 
  dplyr::select(Variable, stock, edge, mean, sd, min, max, group) %>% 
  rename(Rootstock = stock,
         Interstock = edge,
         Sig = group)

tb1 <- bind_rows(tb1a, tb1b, tb1c)

tb1 %>% kable(align = 'c')

tb1 %>%
  write_sheet(ss = gs, sheet = "tb1")
```

### Multivariate

Principal Component Analysis (PCA) of fruit biometrics in the mango crop based on the use of rootstock-interstock combinations.

```{r}
mv <- fru %>% 
  group_by(stock, edge) %>% 
  summarise(across(where(is.numeric), ~ mean(., na.rm = T))) %>%
  dplyr::select(!c(diameter_1, diameter_2, n_fruits)) %>%
  unite("treat", stock:edge, sep = "-") %>% 
   rename(Treat = treat
         , Weight = weigth
         , Length = long
         , Diameter = diameter_average)
  
pca <- mv %>% 
  PCA(scale.unit = T, quali.sup = 1, graph = F) 

# summary

summary(pca, nbelements = Inf, nb.dec = 2)

f5a <- plot.PCA(x = pca, choix = "var"
                , cex=0.8
                )

f5b <- plot.PCA(x = pca, choix = "ind"
                , habillage = 1
                , invisible = c("ind")
                , cex=0.8
                ) 
```

### Figure 5

Principal Component Analysis (PCA). Results of the contributions and correlation of the variables in the Principal Component Analysis (PCA).

```{r}
var <- get_pca_var(pca)

pt1 <- fviz_eig(pca, 
                addlabels=TRUE,
                hjust = 0.05,
                barfill="white",
                barcolor ="darkblue",
                linecolor ="white") + 
  ylim(0, 80) + 
  labs(
    title = "PCA - percentage of explained variances",
    y = "Variance (%)") +
  theme_minimal()

pt2 <- fviz_contrib(pca,
                     choice = "var", 
                     axes = 1, 
                     top = 10,
                     fill="white",
                     color ="darkblue",
                     sort.val = "desc") +
  ylim(0, 60) + 
  labs(title = "Dim 1 - variables contribution") 

pt3 <- fviz_contrib(pca,
                     choice = "var", 
                     axes = 2, 
                     top = 10,
                     fill="white",
                     color ="darkblue",
                     sort.val = "desc") +
  ylim(0, 100) + 
  labs(title = "Dim 2 - variables contribution") 

png("corrplot_output.png", width = 800, height = 800, res = 150)  
corrplot(var$cor, 
         method = "number",
         tl.col = "black", 
         tl.srt = 45)
dev.off()

img_corrplot <- ggdraw() + draw_image("corrplot_output.png")

pt4 <- img_corrplot

# Construcción del grid
fila1 <- plot_grid(f5a, f5b, ncol = 2, labels = "auto", rel_widths = c(1, 1.2))

columna_c <- plot_grid(pt1, pt2, pt3, ncol = 1, labels = "c")

fila2 <- plot_grid(columna_c, pt4, ncol = 2, labels = c("", "d"), rel_widths = c(1, 1))

grid_final <- plot_grid(fila1, fila2, ncol = 1, rel_heights = c(1, 1.2))

grid_final


ggsave2(plot = grid_final, "submission/Figure_5.jpg", height = 30, width = 28, units = "cm")

ggsave2(plot = grid_final, "submission/Figure_5.eps", height = 30, width = 28, units = "cm")

knitr::include_graphics("submission/Figure_5.jpg")
```
